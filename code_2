#include <GLFW/glfw3.h>
#include <iostream>

float angle = 0.0f; // 초기 회전 각도


void drawCube() {
    // 앞
    glBegin(GL_QUADS);
    glColor3f(1.0f, 0.0f, 0.0f); 
    glVertex3f(-0.3f, -0.3f, 0.3f); // Bottom-left
    glVertex3f(0.3f, -0.3f, 0.3f); // Bottom-right
    glVertex3f(0.3f, 0.3f, 0.3f); // Top-right
    glVertex3f(-0.3f, 0.3f, 0.3f); // Top-left
    glEnd();

    // 뒤
    glBegin(GL_QUADS);
    glColor3f(0.0f, 1.0f, 0.0f); 
    glVertex3f(-0.3f, -0.3f, -0.3f); // Bottom-left
    glVertex3f(-0.3f, 0.3f, -0.3f); // Top-left
    glVertex3f(0.3f, 0.3f, -0.3f); // Top-right
    glVertex3f(0.3f, -0.3f, -0.3f); // Bottom-right
    glEnd();

    // 위
    glBegin(GL_QUADS);
    glColor3f(0.0f, 0.0f, 1.0f); 
    glVertex3f(-0.3f, 0.3f, -0.3f); // Top-left
    glVertex3f(-0.3f, 0.3f, 0.3f); // Bottom-left
    glVertex3f(0.3f, 0.3f, 0.3f); // Bottom-right
    glVertex3f(0.3f, 0.3f, -0.3f); // Top-right
    glEnd();

    // 아래
    glBegin(GL_QUADS);
    glColor3f(1.0f, 1.0f, 0.0f); 
    glVertex3f(-0.3f, -0.3f, -0.3f); // Top-right
    glVertex3f(0.3f, -0.3f, -0.3f); // Top-left
    glVertex3f(0.3f, -0.3f, 0.3f); // Bottom-left
    glVertex3f(-0.3f, -0.3f, 0.3f); // Bottom-right
    glEnd();

    // 오른쪽
    glBegin(GL_QUADS);
    glColor3f(1.0f, 0.0f, 1.0f); 
    glVertex3f(0.3f, -0.3f, -0.3f); // Bottom-right
    glVertex3f(0.3f, 0.3f, -0.3f); // Top-right
    glVertex3f(0.3f, 0.3f, 0.3f); // Top-left
    glVertex3f(0.3f, -0.3f, 0.3f); // Bottom-left
    glEnd();

    // 왼쪽
    glBegin(GL_QUADS);
    glColor3f(1.0f, 1.0f, 1.0f); 
    glVertex3f(-0.3f, -0.3f, -0.3f); // Bottom-left
    glVertex3f(-0.3f, -0.3f, 0.3f); // Bottom-right
    glVertex3f(-0.3f, 0.3f, 0.3f); // Top-right
    glVertex3f(-0.3f, 0.3f, -0.3f); // Top-left
    glEnd();
}

void error_callback(int error, const char* description) {
    std::cerr << "Error: " << description << std::endl;
}

void init(GLFWwindow*& window) {
    glfwSetErrorCallback(error_callback);

    if (!glfwInit()) {
        std::cerr << "Failed to initialize GLFW" << std::endl;
        exit(EXIT_FAILURE);
    }

    window = glfwCreateWindow(800, 800, "OpenGL Cube", NULL, NULL);
    if (!window) {
        glfwTerminate();
        std::cerr << "Failed to create GLFW window" << std::endl;
        exit(EXIT_FAILURE);
    }

    glfwMakeContextCurrent(window);
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f); 
    glEnable(GL_DEPTH_TEST);
}

int main() {
    GLFWwindow* window;

    init(window);

    while (!glfwWindowShouldClose(window)) {
        // 회전 각도 업데이트
        angle += 0.5f; // 회전 속도 조절 가능

        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
        glLoadIdentity();
        glRotatef(angle, 1.0f, 1.0f, 0.0f); // 회전 각도에 따라 큐브 회전
        drawCube();
        glfwSwapBuffers(window);
        glfwPollEvents();
    }

    glfwDestroyWindow(window);
    glfwTerminate();
    return 0;
}
